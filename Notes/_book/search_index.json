[
["advanced-rmarkdown.html", "Chapter 7 Advanced Rmarkdown 7.1 YAML options for HTML documents 7.2 Cool stuff in Rmarkdown 7.3 HTML and CSS basics", " Chapter 7 Advanced Rmarkdown So far we have use default settings to create our Rmarkdown documents. Lets prettify our documents!! 7.1 YAML options for HTML documents As we just mentioned before, Markdown was originally designed for HTML output, so it may not be surprising that the HTML format has the richest features among all output formats. We recommend that you read this full section before you learn other output formats, because other formats have several features in common with the HTML document format, and we will not repeat these features in the corresponding sections. To create an HTML document from R Markdown, you specify the html_document output format in the YAML metadata of your document: --- title: first_markdown author: ME ME date: March 22, 2005 output: html_document --- Lets add themes and highlight options title: first_markdown author: ME ME date: March 22, 2005 output: html_document: theme: yeti highlight: kate Now lets add a table of contents title: first_markdown author: ME ME date: March 22, 2005 output: html_document: theme: yeti highlight: kate toc: true toc_float: collapsed: false toc_depth: 4 if you want to hide your code title: first_markdown author: ME ME date: March 22, 2005 output: html_document: theme: yeti highlight: kate toc: true toc_float: collapsed: false toc_depth: 4 code_folding: hide A way to add custom css title: first_markdown author: ME ME date: March 22, 2005 output: html_document: theme: yeti highlight: kate css: styles.css toc: true toc_float: collapsed: false toc_depth: 4 code_folding: hide 7.2 Cool stuff in Rmarkdown 7.2.1 CHEATSHEET This cheat sheet has all the details on how to add figures, links, bullets, headings and tables in Rmarkdown! 7.2.2 Making cools tables in Rmarkdown from R code Tables generated from your R code are very useful to share modified output with other users. Simplest tables in markdown can be generated using the kable function but these table are static and to be honest boring! 7.2.2.1 A kable table library(knitr) kable(cars) knitr::kable(cars) speed dist 4 2 4 10 7 4 7 22 8 16 9 10 10 18 10 26 10 34 11 17 11 28 12 14 12 20 12 24 12 28 13 26 13 34 13 34 13 46 14 26 14 36 14 60 14 80 15 20 15 26 15 54 16 32 16 40 17 32 17 40 17 50 18 42 18 56 18 76 18 84 19 36 19 46 19 68 20 32 20 48 20 52 20 56 20 64 22 66 23 54 24 70 24 92 24 93 24 120 25 85 7.2.2.2 A DT table library(DT) datatable(cars) library(DT) datatable(cars) 7.2.2.3 DT table with download options library(DT) datatable(cars, extensions = &#39;Buttons&#39;, options = list( dom = &#39;Bfrtip&#39;, buttons = c(&#39;copy&#39;, &#39;print&#39;,&#39;csv&#39;, &#39;excel&#39;) ) ) library(DT) datatable(cars, extensions = &#39;Buttons&#39;, options = list( dom = &#39;Bfrtip&#39;, buttons = c(&#39;copy&#39;, &#39;print&#39;,&#39;csv&#39;, &#39;excel&#39;) ) ) 7.2.3 Making tabs in Rmarkdown You can organize content using tabs by applying the .tabset class attribute to headers within a document. This will cause all sub-headers of the header with the .tabset attribute to appear within tabs rather than as standalone sections. For example: ## Quarterly Results {.tabset} ### By Product (tab content) ### By Region (tab content) You can also specify two additional attributes to control the appearance and behavior of the tabs. The .tabset-fade attribute causes the tabs to fade in and out when switching between tabs. The .tabset-pills attribute causes the visual appearance of the tabs to be “pill” rather than traditional tabs. For example: tabset 7.2.4 Rmarkdown to HTML conversion 7.3 HTML and CSS basics HTML, HyperText Markup Language, gives content structure and meaning by defining that content as, for example, headings, paragraphs, or images. CSS, ** Cascading Style Sheets**, is a presentation language created to style the appearance of content—using, for example, fonts or colors. Lets look at the following examples Simple html generated from Rmarkdown Simple html styled by css from themes Simple html styled by custom css 7.3.1 HTML &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;body&gt; &lt;h1&gt;My First Heading&lt;/h1&gt; &lt;p&gt;My first paragraph.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Output My First Heading My first paragraph. You will not have to worry about html too much in Rmarkdown. However, once in a while you might want to add color to some text or other simple things: &lt;p style=&quot;color:tomato&quot;&gt;My first paragraph.&lt;/p&gt; Output My first paragraph. &lt;p style=&quot;color:tomato;font-family:verdana&quot;&gt;My first paragraph.&lt;/p&gt; Output My first paragraph. I use a lot which means adds a single break meaning a extra empty line There are options for highlighting, bold, italic etc To learn more html go to https://www.w3schools.com/default.asp . 7.3.2 CSS CSS stands for Cascading Style Sheets CSS describes how HTML elements are to be displayed on screen, paper, or in other media CSS saves a lot of work. It can control the layout of multiple web pages all at once External stylesheets are stored in CSS files 7.3.2.1 CSS Syntax A CSS rule-set consists of a selector and a declaration block: The selector points to the HTML element you want to style. The declaration block contains one or more declarations separated by semicolons. Each declaration includes a CSS property name and a value, separated by a colon. Multiple CSS declarations are separated with semicolons, and declaration blocks are surrounded by curly braces. p { color: red; text-align: center; } p is a selector in CSS (it points to the HTML element you want to style: ). color is a property, and red is the property value text-align is a property, and center is the property value To learn more visit https://www.w3schools.com/css/css_syntax.asp Exercise Start a new Rmarkdown file for your project. In the same folder, create a styles.css file.In this file write CSS code to change the color of h1 and h2 to one you like. Now link this file to your project Rmarkdown file. "]
]
